on:
  pull_request:
  merge_group:
  push:
    branches: [main]

env:
  BASELINE: base
  CARGO_TERM_COLOR: always
  IAI_CALLGRIND_RUNNER: iai-callgrind-runner

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

name: bench
jobs:
  iai:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      deployments: read
      packages: none
      pull-requests: write
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - name: Install Valgrind
        run: sudo apt update && sudo apt install valgrind && sudo apt-get install tree
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install cargo-binstall
        uses: taiki-e/install-action@cargo-binstall
      - name: Install iai-callgrind-runner
        run: |
          echo "::group::Install"
          cargo binstall iai-callgrind-runner --no-confirm --no-symlinks --force
          echo "::endgroup::"
          echo "::group::Verification"
          which iai-callgrind-runner
          echo "::endgroup::"
      - name: Checkout base
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref || 'main' }}
      - name: Save baseline
        run: cargo bench --bench play_game -- --save-baseline=$BASELINE
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          clean: false
      - name: Compare PR benchmarks
        env:
          CARGO_TERM_COLOR: never
        run: |
          echo 'bench_results<<EOF' >> $GITHUB_OUTPUT
          cargo bench --bench play_game -- --baseline=$BASELINE | tee $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
        id: comparison

      - name: Tree
        run: tree

      - name: Delete all previous comments by workflow
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              issue_number: context.issue.number, 
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            console.log(context)
            console.log(github)
            // Iterate over all comments and delete each one
            for (const comment of comments) {
              console.log(comment)
              if (comment.user.login === 'github-actions[bot]') { // Only delete comments made by the workflow bot
                await github.rest.issues.deleteComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: comment.id
                });
              }
            }
        
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const body = `\`\`\`console\n${{ steps.comparison.outputs.bench_results }}\n\`\`\``;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body,
            })
